/* Tango color pallete */
@define-color TangoButter1 #fce94f;
@define-color TangoButter2 #edd400;
@define-color TangoButter3 #c4a000;
@define-color TangoOrange1 #fcaf3e;
@define-color TangoOrange2 #f57900;
@define-color TangoOrange3 #ce5c00;
@define-color TangoChocolate1 #e9b96e;
@define-color TangoChocolate2 #c17d11;
@define-color TangoChocolate3 #8f5902;
@define-color TangoChameleon1 #8ae234;
@define-color TangoChameleon2 #73d216;
@define-color TangoChameleon3 #4e9a06;
@define-color TangoSkyBlue1 #729fcf;
@define-color TangoSkyBlue2 #3465a4;
@define-color TangoSkyBlue3 #204a87;
@define-color TangoPlum1 #ad7fa8;
@define-color TangoPlum2 #75507b;
@define-color TangoPlum3 #5c3566;
@define-color TangoScarletRed1 #ef2929;
@define-color TangoScarletRed2 #cc0000;
@define-color TangoScarletRed3 #a40000;
@define-color TangoAluminium1 #eeeeec;
@define-color TangoAluminium2 #d3d7cf;
@define-color TangoAluminium3 #babdb6;
@define-color TangoAluminium4 #888a85;
@define-color TangoAluminium5 #555753;
@define-color TangoAluminium6 #2e3436;

/* MAIN */
@keyframes loading {
    0% { background-color: @TangoSkyBlue3; }
    34% { background-color: @TangoSkyBlue2; }
    67% { background-color: @TangoSkyBlue1; }
    100% { background-color: @TangoSkyBlue3; }
}
GtkWindow,  /* Jessie */
window      /* Stretch */
{
/*    background-color: @TangoSkyBlue1; */
/*    background-image: url("/home/mike/Downloads/Bubbles-wallpaper.svg"); */
/*    background: linear-gradient(to top left, @TangoSkyBlue1, @TangoSkyBlue3 50%); */
    /* 165px is a magic number that matches up to the very center of main button */
    background: radial-gradient(farthest-corner at 165px 165px, @TangoAluminium3, @TangoSkyBlue1 90px, @TangoSkyBlue3 150px, @TangoPlum3);
/*    background-image: -gtk-gradient(radial,
        center center, 0,
        center center, 1,
        from(@yellow), to(@green)); */
    background-size: cover;
    background-position: bottom right;
    color: white;
}
/*
 * GtkWindow.loading,  \/\* Jessie \*\/
 * window.loading      \/\* Stretch \*\/
 * {
 *     background-color: green;
 *     background-image: none;
 *     animation: loading infinite linear 3s;
 * }
 */

GtkFrame,  /* Jessie */
frame      /* Stretch */
{
    /* FIXME: The window background is showing in the overlay, give it it's own white background */
}


/* OSD */
#osd {
    padding: 2px;
    border-radius: 10px;
    box-shadow: 0 0 15px #333 inset;

    background-color: grey;
    color: white;
}
/* FIXME: Is there a "big" font option? Is it big enough for a 10-foot UI? */
#osd {
    font-size: 2em;
}

#clock {
    /* I want to keep the clock from detracting focus away from the other (more important) text */
    opacity: 0.65;  /* FIXME: Magic number, fairly arbitrary, it looks nice. */
}

/* Selector */
#station-name, #epg, #selector #clock {
    font-size: 2em;
}

.button,  /* Jessie */
button    /* Stretch */
{
    font-size: 90px;  /* FIXME: Magic number based on the icon size */
    border-radius: 99999px;  /* FIXME: This is a stupid number to put here */
    color: green;

    /* Remove the button style entirely and just display the image */
    box-shadow: none;
    border-style: none;
    /* GtkButton by default has a background-image.
     *  That must be removed before we can change the background-color
     */
    background-image: none;
    transition: 1s ease-in-out;
}

.button.inactive,  /* Jessie */
button.inactive    /* Stretch */
{
    /* I wanted to make inactive icons smaller, but CSS can't be used to change the size of objects.
     * I think this can be done with a background image, but not worth the effort
     */
    opacity: 0.4;
    color: grey;  /* Remove colour from the text string to match the desaturation of the icon images. */
}
.button.inactive:hover,  /* Jessie */
button.inactive:hover    /* Stretch */
{
    /* Only highlight the .active one, because the ? buttons don't highlight
     * and it's less noticable on .active than on .inactive */
    opacity: 0.6;
}
.button.active:hover,  /* Jessie */
button.active:hover    /* Stretch */
{
    /* I know this is deprecated in favour of "gtk-icon-effect",
     * but I want it to work on both Jessie & Stretch */
    -gtk-image-effect: highlight;
/*    -gtk-image-effect: highlight/dim/none; */
}
#ChannelPicker #Picker {
    opacity: 0;
    transition: 1s ease-in-out;
}
#ChannelPicker #Picker.active{
    opacity: 1;
}

#ChannelPicker {
    /* FIXME: The ChannelPicker widget doesn't stretch to fill the window, so this looks ugly */
/*    background: linear-gradient(to bottom,transparent,@TangoSkyBlue1 50%,transparent); */
}
#StationPicker GtkBox {
    /* FIXME: This doesn't work on a Gtk.Layout widget, figure that out */
/*    background: linear-gradient(to right,transparent,@TangoSkyBlue1 50%,transparent); */
}

#StationPicker * .button.active,  /* Jessie */
#StationPicker * button.active    /* Stretch */
{
    /* This button is directly behind the active ChannelPicker, make it invisible */
    opacity: 0;
}

/*
 * GtkImage,  \/\* Jessie \*\/
 * image      \/\* Stretch \*\/
 * {
 *     box-shadow: none;
 *     border-style: none;
 *     border-image: none;
 *     background-image: none;
 *     background-color: transparent;
 * }
 */
